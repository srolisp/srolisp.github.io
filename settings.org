#+TITLE: Literate programming
#+SUBTITLE: elisp, lisp, python, bash
#+AUTHOR: srolisp
* pyvenv-create를 이용해서 virtualenv를 새로 생성하려 했으나 제대로 작동이 안되었다;;

** pyenv가 작동하는지부터 확인
잘 작동하는걸로 봐서는 다른 곳에 원인이 있는 것 같음
#+begin_src bash :results value verbatim :exports both
  pyenv --help
#+end_src

#+RESULTS:
#+begin_example
Usage: pyenv <command> [<args>]

Some useful pyenv commands are:
   --version   Display the version of pyenv
   activate    Activate virtual environment
   commands    List all available pyenv commands
   deactivate   Deactivate virtual environment
   exec        Run an executable with the selected Python version
   global      Set or show the global Python version(s)
   help        Display help for a command
   hooks       List hook scripts for a given pyenv command
   init        Configure the shell environment for pyenv
   install     Install a Python version using python-build
   local       Set or show the local application-specific Python version(s)
   prefix      Display prefix for a Python version
   rehash      Rehash pyenv shims (run this after installing executables)
   root        Display the root directory where versions and shims are kept
   shell       Set or show the shell-specific Python version
   shims       List existing pyenv shims
   uninstall   Uninstall a specific Python version
   version     Show the current Python version(s) and its origin
   version-file   Detect the file that sets the current pyenv version
   version-name   Show the current Python version
   version-origin   Explain how the current Python version is set
   versions    List all Python versions available to pyenv
   virtualenv   Create a Python virtualenv using the pyenv-virtualenv plugin
   virtualenv-delete   Uninstall a specific Python virtualenv
   virtualenv-init   Configure the shell environment for pyenv-virtualenv
   virtualenv-prefix   Display real_prefix for a Python virtualenv version
   virtualenvs   List all Python virtualenvs found in `$PYENV_ROOT/versions/*'.
   whence      List all Python versions that contain the given executable
   which       Display the full path to an executable

See `pyenv help <command>' for information on a specific command.
For full documentation, see: https://github.com/pyenv/pyenv#readme
#+end_example

#+begin_src bash :results verbatim :exports both
  pyenv virtualenvs
#+end_src

#+RESULTS:
:   3.8.5/envs/emacs (created from /Users/sroh/.pyenv/versions/3.8.5)
:   3.8.5/envs/opencv (created from /Users/sroh/.pyenv/versions/3.8.5)
:   emacs (created from /Users/sroh/.pyenv/versions/3.8.5)
:   opencv (created from /Users/sroh/.pyenv/versions/3.8.5)


** pyvenv-create.el 소스코드를 보며 원인을 찾아보다 virtualenv 에서 에러코드를 발생하는 것을 발견

*** virtualenv 실행
#+begin_src bash
  virtualenv
#+end_src

*** TODO error code(에러를 새 버퍼에 띄우는데 바로 나타내는 방법은 없는걸까,  버퍼에 나타난 에러를 복사한후 소스코드 블럭안에 넣어놨다)
+ 파이썬 버전이 2.7.16 을 찾네..
+ 2.7.16은 맥에 기본적으로 깔려있는 버전이고, 현재 깔아놓은 파이썬 버전은 3.8.5 이다. 구글링..구글링..구글링..
#+begin_src sh
  ERROR:root:code for hash md5 was not found.
  Traceback (most recent call last):
    File "/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py", line 147, in <module>
      globals()[__func_name] = __get_hash(__func_name)
    File "/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py", line 97, in __get_builtin_constructor
      raise ValueError('unsupported hash type ' + name)
  ValueError: unsupported hash type md5
  ERROR:root:code for hash sha1 was not found.
  Traceback (most recent call last):
    File "/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py", line 147, in <module>
      globals()[__func_name] = __get_hash(__func_name)
    File "/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py", line 97, in __get_builtin_constructor
      raise ValueError('unsupported hash type ' + name)
  ValueError: unsupported hash type sha1
  ERROR:root:code for hash sha224 was not found.
  Traceback (most recent call last):
    File "/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py", line 147, in <module>
      globals()[__func_name] = __get_hash(__func_name)
    File "/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py", line 97, in __get_builtin_constructor
      raise ValueError('unsupported hash type ' + name)
  ValueError: unsupported hash type sha224
  ERROR:root:code for hash sha256 was not found.
  Traceback (most recent call last):
    File "/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py", line 147, in <module>
      globals()[__func_name] = __get_hash(__func_name)
    File "/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py", line 97, in __get_builtin_constructor
      raise ValueError('unsupported hash type ' + name)
  ValueError: unsupported hash type sha256
  ERROR:root:code for hash sha384 was not found.
  Traceback (most recent call last):
    File "/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py", line 147, in <module>
      globals()[__func_name] = __get_hash(__func_name)
    File "/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py", line 97, in __get_builtin_constructor
      raise ValueError('unsupported hash type ' + name)
  ValueError: unsupported hash type sha384
  ERROR:root:code for hash sha512 was not found.
  Traceback (most recent call last):
    File "/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py", line 147, in <module>
      globals()[__func_name] = __get_hash(__func_name)
    File "/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py", line 97, in __get_builtin_constructor
      raise ValueError('unsupported hash type ' + name)
  ValueError: unsupported hash type sha512
#+end_src

*** PATH쪽 확인
#+begin_src emacs-lisp :results value verbatim :exports both
  (require 'pyvenv)
  (pyvenv-mode 1)
  ;; (pyvenv-create "uiap" "python3.8.5")
  (exec-path)
#+end_src

#+RESULTS:
: ("/usr/local/opt/python@3.8/libexec/bin" "/usr/local/bin" "/usr/bin" "/bin" "/usr/sbin" "/sbin" "/usr/local/Cellar/emacs-head@28/28.0.50_1/libexec/emacs/28.0.50/x86_64-apple-darwin19.6.0")

#+begin_src sh :exports both
  which python
#+end_src

#+RESULTS:
: /Users/sroh/.pyenv/shims/python

*** 구글링해보니 python@2 재설치로 해결했다는 걸 봄. 삭제하면 안된다는 글을 본것 같은데;; 포멧 각인가
#+begin_src bash :results verbatim :session :exports both
  brew uninstall python@2
#+end_src

#+RESULTS:
: Uninstalling /usr/local/Cellar/python@2/2.7.16... (7,567 files, 122.8MB)

*** virtualenv 실행
#+begin_src bash :results verbatim :session
  virtualenv
#+end_src

*** error code
#+begin_src sh
  /usr/local/Cellar/pyenv/1.2.20/libexec/pyenv-exec: /usr/local/bin/virtualenv: /usr/local/opt/python@2/bin/python2.7: bad interpreter: No such file or directory
  /usr/local/Cellar/pyenv/1.2.20/libexec/pyenv-exec: line 48: /usr/local/bin/virtualenv: Undefined error: 0
#+end_src

*** 구글링..구글링..
virtualenv를 재설치 해보다란다
#+begin_src bash :results verbatim :session
  pip uninstall virtualenv
#+end_src

#+RESULTS:

#+begin_src bash :results verbatim :session :exports both 
  pip install virtualenv
#+end_src

#+RESULTS:
#+begin_example
Collecting virtualenv
  Using cached virtualenv-20.0.31-py2.py3-none-any.whl (4.9 MB)
Collecting distlib<1,>=0.3.1
  Using cached distlib-0.3.1-py2.py3-none-any.whl (335 kB)
Collecting appdirs<2,>=1.4.3
  Using cached appdirs-1.4.4-py2.py3-none-any.whl (9.6 kB)
Collecting filelock<4,>=3.0.0
  Using cached filelock-3.0.12-py3-none-any.whl (7.6 kB)
Collecting six<2,>=1.9.0
  Using cached six-1.15.0-py2.py3-none-any.whl (10 kB)
Installing collected packages: distlib, appdirs, filelock, six, virtualenv
Successfully installed appdirs-1.4.4 distlib-0.3.1 filelock-3.0.12 six-1.15.0 virtualenv-20.0.31
#+end_example

*** 다시 실행해보니 제대로 작동 파이썬 시러시러 
#+begin_src bash :results verbatim :session :exports both
  virtualenv --version
#+end_src

#+RESULTS:
: virtualenv 20.0.31 from /usr/local/lib/python3.8/site-packages/virtualenv/__init__.py

*** TODO 정상 작동! 일단 해결했는데 python@2 버전은 설치 안해놔도 되나;;
#+begin_src emacs-lisp :results value verbatim
  (require 'pyvenv)
  (pyvenv-mode 1)
  (pyvenv-create "uiap" "python3.8.5")
#+end_src

#+RESULTS:
: nil

#+begin_src bash :results verbatim :session :exports both 
pyenv virtualenvs
#+end_src

#+attr_html: :style font-family:courier;
#+RESULTS:
:   3.8.5/envs/emacs (created from /Users/sroh/.pyenv/versions/3.8.5)
:   3.8.5/envs/opencv (created from /Users/sroh/.pyenv/versions/3.8.5)
:   emacs (created from /Users/sroh/.pyenv/versions/3.8.5)
:   opencv (created from /Users/sroh/.pyenv/versions/3.8.5)
:   uiap (created from /usr/local/Cellar/python@3.8/3.8.5/Frameworks/Python.framework/Versions/3.8)

#+begin_src emacs-lisp :results verbatim
  (pyvenv-workon "uiap")
#+end_src

#+RESULTS:
: nil

