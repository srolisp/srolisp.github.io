#+title: Literate programming
#+subtitle: elisp, lisp, python, bash
#+author: srolisp
* lectures

** [[file:lecture-note/ai-lecture-kdh-200909-1.html::<?xml version="1.0" encoding="utf-8"?>][200909-1]]
** [[file:lecture-note/ai-lecture-kdh-200909-2.html::<?xml version="1.0" encoding="utf-8"?>][200909-2]]
** [[file:lecture-note/ai-lecture-kdh-200910.html::<?xml version="1.0" encoding="utf-8"?>][200910]]

* pyenv은 파이썬 버전을 다양하게 사용할 수 있다
* virtualenv 프로젝트별로 패키지들의 충돌을 막아주기 위한 가상환경이다.
pyenv의 목록에 virtualenv가 들어가기 때문에 pyenv를 먼저 설치

* pyvenv-create를 이용해서 virtualenv를 새로 생성하려 했으나 제대로 작동이 안되었다;;

** pyenv가 작동하는지부터 확인
잘 작동하는걸로 봐서는 다른 곳에 원인이 있는 것 같음
#+begin_src bash :results value verbatim :exports both
  pyenv --help
#+end_src

#+RESULTS:
#+begin_example
Usage: pyenv <command> [<args>]

Some useful pyenv commands are:
   --version   Display the version of pyenv
   activate    Activate virtual environment
   commands    List all available pyenv commands
   deactivate   Deactivate virtual environment
   exec        Run an executable with the selected Python version
   global      Set or show the global Python version(s)
   help        Display help for a command
   hooks       List hook scripts for a given pyenv command
   init        Configure the shell environment for pyenv
   install     Install a Python version using python-build
   local       Set or show the local application-specific Python version(s)
   prefix      Display prefix for a Python version
   rehash      Rehash pyenv shims (run this after installing executables)
   root        Display the root directory where versions and shims are kept
   shell       Set or show the shell-specific Python version
   shims       List existing pyenv shims
   uninstall   Uninstall a specific Python version
   version     Show the current Python version(s) and its origin
   version-file   Detect the file that sets the current pyenv version
   version-name   Show the current Python version
   version-origin   Explain how the current Python version is set
   versions    List all Python versions available to pyenv
   virtualenv   Create a Python virtualenv using the pyenv-virtualenv plugin
   virtualenv-delete   Uninstall a specific Python virtualenv
   virtualenv-init   Configure the shell environment for pyenv-virtualenv
   virtualenv-prefix   Display real_prefix for a Python virtualenv version
   virtualenvs   List all Python virtualenvs found in `$PYENV_ROOT/versions/*'.
   whence      List all Python versions that contain the given executable
   which       Display the full path to an executable

See `pyenv help <command>' for information on a specific command.
For full documentation, see: https://github.com/pyenv/pyenv#readme
#+end_example

#+begin_src bash :results verbatim :exports both
  pyenv virtualenvs
#+end_src

#+RESULTS:
:   3.8.5/envs/emacs (created from /Users/sroh/.pyenv/versions/3.8.5)
:   3.8.5/envs/opencv (created from /Users/sroh/.pyenv/versions/3.8.5)
:   emacs (created from /Users/sroh/.pyenv/versions/3.8.5)
:   opencv (created from /Users/sroh/.pyenv/versions/3.8.5)


** pyvenv-create.el 소스코드를 보며 원인을 찾아보다 virtualenv 에서 에러코드를 발생하는 것을 발견

*** virtualenv 실행
#+begin_src bash
  virtualenv
#+end_src

*** TODO error code(에러를 새 버퍼에 띄우는데 바로 나타내는 방법은 없는걸까,  버퍼에 나타난 에러를 복사한후 소스코드 블럭안에 넣어놨다)
+ 파이썬 버전이 2.7.16 을 찾네..
+ 2.7.16은 맥에 기본적으로 깔려있는 버전이고, 현재 깔아놓은 파이썬 버전은 3.8.5 이다. 구글링..구글링..구글링..
#+begin_src sh
  ERROR:root:code for hash md5 was not found.
  Traceback (most recent call last):
    File "/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py", line 147, in <module>
      globals()[__func_name] = __get_hash(__func_name)
    File "/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py", line 97, in __get_builtin_constructor
      raise ValueError('unsupported hash type ' + name)
  ValueError: unsupported hash type md5
  ERROR:root:code for hash sha1 was not found.
  Traceback (most recent call last):
    File "/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py", line 147, in <module>
      globals()[__func_name] = __get_hash(__func_name)
    File "/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py", line 97, in __get_builtin_constructor
      raise ValueError('unsupported hash type ' + name)
  ValueError: unsupported hash type sha1
  ERROR:root:code for hash sha224 was not found.
  Traceback (most recent call last):
    File "/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py", line 147, in <module>
      globals()[__func_name] = __get_hash(__func_name)
    File "/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py", line 97, in __get_builtin_constructor
      raise ValueError('unsupported hash type ' + name)
  ValueError: unsupported hash type sha224
  ERROR:root:code for hash sha256 was not found.
  Traceback (most recent call last):
    File "/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py", line 147, in <module>
      globals()[__func_name] = __get_hash(__func_name)
    File "/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py", line 97, in __get_builtin_constructor
      raise ValueError('unsupported hash type ' + name)
  ValueError: unsupported hash type sha256
  ERROR:root:code for hash sha384 was not found.
  Traceback (most recent call last):
    File "/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py", line 147, in <module>
      globals()[__func_name] = __get_hash(__func_name)
    File "/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py", line 97, in __get_builtin_constructor
      raise ValueError('unsupported hash type ' + name)
  ValueError: unsupported hash type sha384
  ERROR:root:code for hash sha512 was not found.
  Traceback (most recent call last):
    File "/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py", line 147, in <module>
      globals()[__func_name] = __get_hash(__func_name)
    File "/usr/local/Cellar/python@2/2.7.16/Frameworks/Python.framework/Versions/2.7/lib/python2.7/hashlib.py", line 97, in __get_builtin_constructor
      raise ValueError('unsupported hash type ' + name)
  ValueError: unsupported hash type sha512
#+end_src

*** PATH쪽 확인
#+begin_src emacs-lisp :results value verbatim :exports both
  (require 'pyvenv)
  (pyvenv-mode 1)
  ;; (pyvenv-create "uiap" "python3.8.5")
  (exec-path)
#+end_src

#+RESULTS:
: ("/usr/local/opt/python@3.8/libexec/bin" "/usr/local/bin" "/usr/bin" "/bin" "/usr/sbin" "/sbin" "/usr/local/Cellar/emacs-head@28/28.0.50_1/libexec/emacs/28.0.50/x86_64-apple-darwin19.6.0")

#+begin_src sh :exports both
  which python
#+end_src

#+RESULTS:
: /Users/sroh/.pyenv/shims/python

*** 구글링해보니 python@2 재설치로 해결했다는 걸 봄. 삭제하면 안된다는 글을 본것 같은데;; 포멧 각인가
#+begin_src bash :results verbatim :session :exports both
  brew uninstall python@2
#+end_src

#+RESULTS:
: Uninstalling /usr/local/Cellar/python@2/2.7.16... (7,567 files, 122.8MB)

*** virtualenv 실행
#+begin_src bash :results verbatim :session
  virtualenv
#+end_src

*** error code
#+begin_src sh
  /usr/local/Cellar/pyenv/1.2.20/libexec/pyenv-exec: /usr/local/bin/virtualenv: /usr/local/opt/python@2/bin/python2.7: bad interpreter: No such file or directory
  /usr/local/Cellar/pyenv/1.2.20/libexec/pyenv-exec: line 48: /usr/local/bin/virtualenv: Undefined error: 0
#+end_src

*** 구글링..구글링..
virtualenv를 재설치 해보라네
#+begin_src bash :results verbatim :session
  pip uninstall virtualenv
#+end_src

#+RESULTS:

#+begin_src bash :results verbatim :session :exports both 
  pip install virtualenv
#+end_src

#+RESULTS:
#+begin_example
Collecting virtualenv
  Using cached virtualenv-20.0.31-py2.py3-none-any.whl (4.9 MB)
Collecting distlib<1,>=0.3.1
  Using cached distlib-0.3.1-py2.py3-none-any.whl (335 kB)
Collecting appdirs<2,>=1.4.3
  Using cached appdirs-1.4.4-py2.py3-none-any.whl (9.6 kB)
Collecting filelock<4,>=3.0.0
Using cached filelock-3.0.12-py3-none-any.whl (7.6 kB)
Collecting six<2,>=1.9.0
  Using cached six-1.15.0-py2.py3-none-any.whl (10 kB)
Installing collected packages: distlib, appdirs, filelock, six, virtualenv
Successfully installed appdirs-1.4.4 distlib-0.3.1 filelock-3.0.12 six-1.15.0 virtualenv-20.0.31
#+end_example

*** 다시 실행해보니 제대로 작동;; 파이썬과 친해지려면 한참 멀었구나
#+begin_src bash :results verbatim :session :exports both
  virtualenv --version
#+end_src

#+RESULTS:
: virtualenv 20.0.31 from /usr/local/lib/python3.8/site-packages/virtualenv/__init__.py

*** TODO 정상 작동! 일단 해결했는데 python@2 버전은 설치 안해놔도 되나;;
#+begin_src emacs-lisp :results value verbatim
  (require 'pyvenv)
  (pyvenv-mode 1)
  (pyvenv-create "uiap" "python3.8.5")
#+end_src

#+RESULTS:
: nil

#+begin_src bash :results verbatim :session :exports both 
pyenv virtualenvs
#+end_src

*** env에 uiap가 정상적으로 생성되었고, pyvenv-workon실행시키니 minibuffer에 해당 env가 표시되는것도 확인.
#+RESULTS:
:   3.8.5/envs/emacs (created from /Users/sroh/.pyenv/versions/3.8.5)
:   3.8.5/envs/opencv (created from /Users/sroh/.pyenv/versions/3.8.5)
:   emacs (created from /Users/sroh/.pyenv/versions/3.8.5)
:   opencv (created from /Users/sroh/.pyenv/versions/3.8.5)
:   uiap (created from /usr/local/Cellar/python@3.8/3.8.5/Frameworks/Python.framework/Versions/3.8)

#+begin_src emacs-lisp :results verbatim
  (pyvenv-workon "uiap")
#+end_src

#+RESULTS:
: nil

*** TODO html로 export할때 RESULTS: 결과중 일부만 색상이나 밑줄등 바꾸려면 어떻게 해야할까?

* 웹으로 확인차 export할 때 블럭마다 confirm을 묻는데 매번 no 쳐야했다. 
현재 해결된 문제의 코드를 다시 evaluate하면 다른 메세지를 나타내기 때문에 no를 해야했는데 ob-core.el 파일을 읽어보니 해결책이 있었다.
** The variable `org-babel-confirm-evaluate-answer-no' is used by
the async export process, which requires a non-interactive
environment, to override this check."
#+begin_src emacs-lisp
  (setq org-babel-confirm-evaluate-answer-no t)
#+end_src

* install jupyter

** uiap 활성화(pyvenv-workon -> uiap)

** version 확인
#+begin_src bash
  python -V
#+end_src

#+RESULTS:
: Python 3.8.5

** pip 업그레이드 (해야하나;;)
#+begin_src bash
  python3 -m pip install --upgrade pip
#+end_src

#+RESULTS:
: Requirement already up-to-date: pip in /Users/sroh/.pyenv/versions/uiap/lib/python3.8/site-packages (20.2.2)

** 최신버전이라는군. jupyter 설치
#+begin_src bash :results verbatim :exports both
  python3 -m pip install jupyter
#+end_src

#+RESULTS:
#+begin_example
Collecting jupyter
  Downloading jupyter-1.0.0-py2.py3-none-any.whl (2.7 kB)
Collecting jupyter-console
  Downloading jupyter_console-6.2.0-py3-none-any.whl (22 kB)
Collecting nbconvert
  Downloading nbconvert-5.6.1-py2.py3-none-any.whl (455 kB)
Collecting ipywidgets
  Downloading ipywidgets-7.5.1-py2.py3-none-any.whl (121 kB)
Collecting qtconsole
  Downloading qtconsole-4.7.7-py2.py3-none-any.whl (118 kB)
Collecting ipykernel
  Downloading ipykernel-5.3.4-py3-none-any.whl (120 kB)
Collecting notebook
  Downloading notebook-6.1.3-py3-none-any.whl (9.4 MB)
Collecting jupyter-client
  Downloading jupyter_client-6.1.7-py3-none-any.whl (108 kB)
Collecting prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0
  Downloading prompt_toolkit-3.0.7-py3-none-any.whl (355 kB)
Collecting ipython
  Downloading ipython-7.18.1-py3-none-any.whl (786 kB)
Collecting pygments
  Downloading Pygments-2.6.1-py3-none-any.whl (914 kB)
Collecting testpath
  Downloading testpath-0.4.4-py2.py3-none-any.whl (163 kB)
Collecting entrypoints>=0.2.2
  Downloading entrypoints-0.3-py2.py3-none-any.whl (11 kB)
Collecting pandocfilters>=1.4.1
  Downloading pandocfilters-1.4.2.tar.gz (14 kB)
Collecting mistune<2,>=0.8.1
  Downloading mistune-0.8.4-py2.py3-none-any.whl (16 kB)
Collecting jinja2>=2.4
  Downloading Jinja2-2.11.2-py2.py3-none-any.whl (125 kB)
Collecting defusedxml
  Downloading defusedxml-0.6.0-py2.py3-none-any.whl (23 kB)
Collecting nbformat>=4.4
  Downloading nbformat-5.0.7-py3-none-any.whl (170 kB)
Collecting traitlets>=4.2
  Downloading traitlets-5.0.3-py3-none-any.whl (97 kB)
Collecting bleach
  Downloading bleach-3.1.5-py2.py3-none-any.whl (151 kB)
Collecting jupyter-core
  Downloading jupyter_core-4.6.3-py2.py3-none-any.whl (83 kB)
Collecting widgetsnbextension~=3.5.0
  Downloading widgetsnbextension-3.5.1-py2.py3-none-any.whl (2.2 MB)
Collecting pyzmq>=17.1
  Downloading pyzmq-19.0.2-cp38-cp38-macosx_10_9_x86_64.whl (806 kB)
Collecting qtpy
  Downloading QtPy-1.9.0-py2.py3-none-any.whl (54 kB)
Collecting ipython-genutils
  Using cached ipython_genutils-0.2.0-py2.py3-none-any.whl (26 kB)
Collecting appnope; platform_system == "Darwin"
  Using cached appnope-0.1.0-py2.py3-none-any.whl (4.0 kB)
Collecting tornado>=4.2
  Downloading tornado-6.0.4.tar.gz (496 kB)
Collecting Send2Trash
  Downloading Send2Trash-1.5.0-py3-none-any.whl (12 kB)
Collecting argon2-cffi
  Downloading argon2_cffi-20.1.0-cp37-abi3-macosx_10_6_intel.whl (65 kB)
Collecting terminado>=0.8.3
  Downloading terminado-0.8.3-py2.py3-none-any.whl (33 kB)
Collecting prometheus-client
  Downloading prometheus_client-0.8.0-py2.py3-none-any.whl (53 kB)
Collecting python-dateutil>=2.1
  Downloading python_dateutil-2.8.1-py2.py3-none-any.whl (227 kB)
Collecting wcwidth
  Downloading wcwidth-0.2.5-py2.py3-none-any.whl (30 kB)
Collecting pickleshare
  Using cached pickleshare-0.7.5-py2.py3-none-any.whl (6.9 kB)
Collecting jedi>=0.10
  Using cached jedi-0.17.2-py2.py3-none-any.whl (1.4 MB)
Collecting backcall
  Downloading backcall-0.2.0-py2.py3-none-any.whl (11 kB)
Requirement already satisfied: setuptools>=18.5 in /Users/sroh/.pyenv/versions/uiap/lib/python3.8/site-packages (from ipython->jupyter-console->jupyter) (49.6.0)
Collecting decorator
  Downloading decorator-4.4.2-py2.py3-none-any.whl (9.2 kB)
Collecting pexpect>4.3; sys_platform != "win32"
  Downloading pexpect-4.8.0-py2.py3-none-any.whl (59 kB)
Collecting MarkupSafe>=0.23
  Downloading MarkupSafe-1.1.1-cp38-cp38-macosx_10_9_x86_64.whl (16 kB)
Collecting jsonschema!=2.5.0,>=2.4
  Downloading jsonschema-3.2.0-py2.py3-none-any.whl (56 kB)
Collecting packaging
  Downloading packaging-20.4-py2.py3-none-any.whl (37 kB)
Collecting webencodings
  Using cached webencodings-0.5.1-py2.py3-none-any.whl (11 kB)
Collecting six>=1.9.0
  Using cached six-1.15.0-py2.py3-none-any.whl (10 kB)
Collecting cffi>=1.0.0
  Downloading cffi-1.14.2-cp38-cp38-macosx_10_9_x86_64.whl (176 kB)
Collecting ptyprocess; os_name != "nt"
  Using cached ptyprocess-0.6.0-py2.py3-none-any.whl (39 kB)
Collecting parso<0.8.0,>=0.7.0
  Using cached parso-0.7.1-py2.py3-none-any.whl (109 kB)
Collecting pyrsistent>=0.14.0
  Downloading pyrsistent-0.16.0.tar.gz (108 kB)
Collecting attrs>=17.4.0
  Downloading attrs-20.2.0-py2.py3-none-any.whl (48 kB)
Collecting pyparsing>=2.0.2
  Downloading pyparsing-2.4.7-py2.py3-none-any.whl (67 kB)
Collecting pycparser
  Downloading pycparser-2.20-py2.py3-none-any.whl (112 kB)
Building wheels for collected packages: pandocfilters, tornado, pyrsistent
  Building wheel for pandocfilters (setup.py): started
  Building wheel for pandocfilters (setup.py): finished with status 'done'
  Created wheel for pandocfilters: filename=pandocfilters-1.4.2-py3-none-any.whl size=7855 sha256=ed425e02f45f0216593f7c21a73840608dd43179d5492e6abb60832993799207
  Stored in directory: /Users/sroh/Library/Caches/pip/wheels/f6/08/65/e4636b703d0e870cd62692dafd6b47db27287fe80cea433722
  Building wheel for tornado (setup.py): started
  Building wheel for tornado (setup.py): finished with status 'done'
  Created wheel for tornado: filename=tornado-6.0.4-cp38-cp38-macosx_10_15_x86_64.whl size=417121 sha256=63b891e9e1dde5329bebc490862193b7b70603d248647be4e0e3a85af87dbef6
  Stored in directory: /Users/sroh/Library/Caches/pip/wheels/88/79/e5/598ba17e85eccf2626eab62e4ee8452895636cd542650d450d
  Building wheel for pyrsistent (setup.py): started
  Building wheel for pyrsistent (setup.py): finished with status 'done'
  Created wheel for pyrsistent: filename=pyrsistent-0.16.0-cp38-cp38-macosx_10_15_x86_64.whl size=69081 sha256=df067311684745e3c44b0a6d8769c8f3b85284ba8f16734f44b851092108e8c0
  Stored in directory: /Users/sroh/Library/Caches/pip/wheels/17/be/0f/727fb20889ada6aaaaba861f5f0eb21663533915429ad43f28
Successfully built pandocfilters tornado pyrsistent
Installing collected packages: ipython-genutils, traitlets, jupyter-core, tornado, six, python-dateutil, pyzmq, jupyter-client, wcwidth, prompt-toolkit, pickleshare, parso, jedi, backcall, pygments, decorator, ptyprocess, pexpect, appnope, ipython, ipykernel, jupyter-console, testpath, entrypoints, pandocfilters, mistune, MarkupSafe, jinja2, defusedxml, pyrsistent, attrs, jsonschema, nbformat, pyparsing, packaging, webencodings, bleach, nbconvert, Send2Trash, pycparser, cffi, argon2-cffi, terminado, prometheus-client, notebook, widgetsnbextension, ipywidgets, qtpy, qtconsole, jupyter
Successfully installed MarkupSafe-1.1.1 Send2Trash-1.5.0 appnope-0.1.0 argon2-cffi-20.1.0 attrs-20.2.0 backcall-0.2.0 bleach-3.1.5 cffi-1.14.2 decorator-4.4.2 defusedxml-0.6.0 entrypoints-0.3 ipykernel-5.3.4 ipython-7.18.1 ipython-genutils-0.2.0 ipywidgets-7.5.1 jedi-0.17.2 jinja2-2.11.2 jsonschema-3.2.0 jupyter-1.0.0 jupyter-client-6.1.7 jupyter-console-6.2.0 jupyter-core-4.6.3 mistune-0.8.4 nbconvert-5.6.1 nbformat-5.0.7 notebook-6.1.3 packaging-20.4 pandocfilters-1.4.2 parso-0.7.1 pexpect-4.8.0 pickleshare-0.7.5 prometheus-client-0.8.0 prompt-toolkit-3.0.7 ptyprocess-0.6.0 pycparser-2.20 pygments-2.6.1 pyparsing-2.4.7 pyrsistent-0.16.0 python-dateutil-2.8.1 pyzmq-19.0.2 qtconsole-4.7.7 qtpy-1.9.0 six-1.15.0 terminado-0.8.3 testpath-0.4.4 tornado-6.0.4 traitlets-5.0.3 wcwidth-0.2.5 webencodings-0.5.1 widgetsnbextension-3.5.1
#+end_example

** ipython 테스트
#+begin_src bash :exports both
ipython -V
#+end_src

#+RESULTS:
: 7.18.1

** org-babel 테스트
#+begin_src ipython :results output
  print("hello world")
#+end_src

#+RESULTS:
: hello world

#+BEGIN_SRC ipython :session :results raw drawer
  %matplotlib inline
  import matplotlib.pyplot as plt
  import numpy as np
#+END_SRC

#+RESULTS:
:results:
# Out[1]:
:end:

** matplotlib 설치
#+begin_src bash :results verbatim
  pip install matplotlib
#+end_src

#+RESULTS:
: Requirement already satisfied: matplotlib in /Users/sroh/.pyenv/versions/uiap/lib/python3.8/site-packages (3.3.1)
: Requirement already satisfied: certifi>=2020.06.20 in /Users/sroh/.pyenv/versions/uiap/lib/python3.8/site-packages (from matplotlib) (2020.6.20)
: Requirement already satisfied: pillow>=6.2.0 in /Users/sroh/.pyenv/versions/uiap/lib/python3.8/site-packages (from matplotlib) (7.2.0)
: Requirement already satisfied: numpy>=1.15 in /Users/sroh/.pyenv/versions/uiap/lib/python3.8/site-packages (from matplotlib) (1.19.1)
: Requirement already satisfied: python-dateutil>=2.1 in /Users/sroh/.pyenv/versions/uiap/lib/python3.8/site-packages (from matplotlib) (2.8.1)
: Requirement already satisfied: cycler>=0.10 in /Users/sroh/.pyenv/versions/uiap/lib/python3.8/site-packages (from matplotlib) (0.10.0)
: Requirement already satisfied: kiwisolver>=1.0.1 in /Users/sroh/.pyenv/versions/uiap/lib/python3.8/site-packages (from matplotlib) (1.2.0)
: Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.3 in /Users/sroh/.pyenv/versions/uiap/lib/python3.8/site-packages (from matplotlib) (2.4.7)
: Requirement already satisfied: six>=1.5 in /Users/sroh/.pyenv/versions/uiap/lib/python3.8/site-packages (from python-dateutil>=2.1->matplotlib) (1.15.0)

#+BEGIN_SRC ipython :session :results raw drawer
  %matplotlib inline
  import matplotlib.pyplot as plt
  import numpy as np
#+END_SRC

#+RESULTS:
:results:
# Out[2]:
:end:

#+BEGIN_SRC ipython :session :exports both :results raw drawer
  plt.hist(np.random.randn(20000), bins=200)
#+END_SRC

#+RESULTS:
:results:
# Out[2]:
#+BEGIN_EXAMPLE
  (array([  1.,   0.,   1.,   0.,   0.,   0.,   0.,   1.,   0.,   0.,   1.,
  0.,   1.,   1.,   0.,   2.,   0.,   1.,   2.,   3.,   1.,   2.,
  2.,   4.,   2.,   1.,   1.,   5.,   6.,   6.,   5.,  14.,   8.,
  6.,  12.,  12.,  14.,  10.,  14.,  13.,  21.,  15.,  30.,  24.,
  25.,  32.,  40.,  45.,  43.,  45.,  51.,  40.,  61.,  72.,  74.,
  72.,  79., 109., 100., 100., 120., 102., 127., 119., 139., 158.,
  164., 156., 159., 179., 188., 200., 197., 207., 217., 234., 250.,
  215., 256., 257., 260., 297., 279., 290., 280., 288., 313., 305.,
  308., 327., 316., 321., 317., 319., 331., 339., 331., 311., 334.,
  362., 333., 306., 332., 304., 340., 285., 286., 309., 275., 292.,
  281., 291., 269., 271., 260., 229., 248., 205., 220., 221., 199.,
  203., 178., 175., 173., 157., 136., 161., 140., 127., 118., 115.,
  117., 100., 104.,  87.,  78.,  95.,  77.,  73.,  56.,  58.,  54.,
  63.,  40.,  39.,  51.,  38.,  30.,  37.,  29.,  25.,  14.,  18.,
  14.,  18.,  11.,  18.,  11.,   8.,   9.,   7.,  10.,  10.,   5.,
  5.,   7.,   2.,   8.,   9.,   6.,   0.,   1.,   4.,   1.,   3.,
  1.,   1.,   0.,   2.,   1.,   1.,   0.,   0.,   1.,   0.,   0.,
  0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,
  0.,   2.]),
  array([-4.03406121, -3.99237603, -3.95069086, -3.90900569, -3.86732051,
  -3.82563534, -3.78395016, -3.74226499, -3.70057981, -3.65889464,
  -3.61720946, -3.57552429, -3.53383911, -3.49215394, -3.45046877,
  -3.40878359, -3.36709842, -3.32541324, -3.28372807, -3.24204289,
  -3.20035772, -3.15867254, -3.11698737, -3.07530219, -3.03361702,
  -2.99193185, -2.95024667, -2.9085615 , -2.86687632, -2.82519115,
  -2.78350597, -2.7418208 , -2.70013562, -2.65845045, -2.61676527,
  -2.5750801 , -2.53339493, -2.49170975, -2.45002458, -2.4083394 ,
  -2.36665423, -2.32496905, -2.28328388, -2.2415987 , -2.19991353,
  -2.15822835, -2.11654318, -2.07485801, -2.03317283, -1.99148766,
  -1.94980248, -1.90811731, -1.86643213, -1.82474696, -1.78306178,
  -1.74137661, -1.69969143, -1.65800626, -1.61632109, -1.57463591,
  -1.53295074, -1.49126556, -1.44958039, -1.40789521, -1.36621004,
  -1.32452486, -1.28283969, -1.24115451, -1.19946934, -1.15778416,
  -1.11609899, -1.07441382, -1.03272864, -0.99104347, -0.94935829,
  -0.90767312, -0.86598794, -0.82430277, -0.78261759, -0.74093242,
  -0.69924724, -0.65756207, -0.6158769 , -0.57419172, -0.53250655,
  -0.49082137, -0.4491362 , -0.40745102, -0.36576585, -0.32408067,
  -0.2823955 , -0.24071032, -0.19902515, -0.15733998, -0.1156548 ,
  -0.07396963, -0.03228445,  0.00940072,  0.0510859 ,  0.09277107,
  0.13445625,  0.17614142,  0.2178266 ,  0.25951177,  0.30119694,
  0.34288212,  0.38456729,  0.42625247,  0.46793764,  0.50962282,
  0.55130799,  0.59299317,  0.63467834,  0.67636352,  0.71804869,
  0.75973386,  0.80141904,  0.84310421,  0.88478939,  0.92647456,
  0.96815974,  1.00984491,  1.05153009,  1.09321526,  1.13490044,
  1.17658561,  1.21827078,  1.25995596,  1.30164113,  1.34332631,
  1.38501148,  1.42669666,  1.46838183,  1.51006701,  1.55175218,
  1.59343736,  1.63512253,  1.6768077 ,  1.71849288,  1.76017805,
  1.80186323,  1.8435484 ,  1.88523358,  1.92691875,  1.96860393,
  2.0102891 ,  2.05197428,  2.09365945,  2.13534462,  2.1770298 ,
  2.21871497,  2.26040015,  2.30208532,  2.3437705 ,  2.38545567,
  2.42714085,  2.46882602,  2.5105112 ,  2.55219637,  2.59388154,
  2.63556672,  2.67725189,  2.71893707,  2.76062224,  2.80230742,
  2.84399259,  2.88567777,  2.92736294,  2.96904812,  3.01073329,
  3.05241846,  3.09410364,  3.13578881,  3.17747399,  3.21915916,
  3.26084434,  3.30252951,  3.34421469,  3.38589986,  3.42758504,
  3.46927021,  3.51095538,  3.55264056,  3.59432573,  3.63601091,
  3.67769608,  3.71938126,  3.76106643,  3.80275161,  3.84443678,
  3.88612196,  3.92780713,  3.9694923 ,  4.01117748,  4.05286265,
  4.09454783,  4.136233  ,  4.17791818,  4.21960335,  4.26128853,
  4.3029737 ]),
  <BarContainer object of 200 artists>)
#+END_EXAMPLE
[[file:./obipy-resources/NYQQQj.png]]
:end:

* anaconda 를 설치했으면 됐는데
** install 가능한 버전 확인
#+begin_src bash :results verbatim 
  pyenv install -l
#+end_src

#+RESULTS:
#+begin_example
Available versions:
  2.1.3
  2.2.3
  2.3.7
  2.4.0
  2.4.1
  2.4.2
  2.4.3
  2.4.4
  2.4.5
  2.4.6
  2.5.0
  2.5.1
  2.5.2
  2.5.3
  2.5.4
  2.5.5
  2.5.6
  2.6.6
  2.6.7
  2.6.8
  2.6.9
  2.7.0
  2.7-dev
  2.7.1
  2.7.2
  2.7.3
  2.7.4
  2.7.5
  2.7.6
  2.7.7
  2.7.8
  2.7.9
  2.7.10
  2.7.11
  2.7.12
  2.7.13
  2.7.14
  2.7.15
  2.7.16
  2.7.17
  2.7.18
  3.0.1
  3.1.0
  3.1.1
  3.1.2
  3.1.3
  3.1.4
  3.1.5
  3.2.0
  3.2.1
  3.2.2
  3.2.3
  3.2.4
  3.2.5
  3.2.6
  3.3.0
  3.3.1
  3.3.2
  3.3.3
  3.3.4
  3.3.5
  3.3.6
  3.3.7
  3.4.0
  3.4-dev
  3.4.1
  3.4.2
  3.4.3
  3.4.4
  3.4.5
  3.4.6
  3.4.7
  3.4.8
  3.4.9
  3.4.10
  3.5.0
  3.5-dev
  3.5.1
  3.5.2
  3.5.3
  3.5.4
  3.5.5
  3.5.6
  3.5.7
  3.5.8
  3.5.9
  3.6.0
  3.6-dev
  3.6.1
  3.6.2
  3.6.3
  3.6.4
  3.6.5
  3.6.6
  3.6.7
  3.6.8
  3.6.9
  3.6.10
  3.6.11
  3.7.0
  3.7-dev
  3.7.1
  3.7.2
  3.7.3
  3.7.4
  3.7.5
  3.7.6
  3.7.7
  3.7.8
  3.8.0
  3.8-dev
  3.8.1
  3.8.2
  3.8.3
  3.8.4
  3.8.5
  3.9.0b5
  3.9-dev
  3.10-dev
  activepython-2.7.14
  activepython-3.5.4
  activepython-3.6.0
  anaconda-1.4.0
  anaconda-1.5.0
  anaconda-1.5.1
  anaconda-1.6.0
  anaconda-1.6.1
  anaconda-1.7.0
  anaconda-1.8.0
  anaconda-1.9.0
  anaconda-1.9.1
  anaconda-1.9.2
  anaconda-2.0.0
  anaconda-2.0.1
  anaconda-2.1.0
  anaconda-2.2.0
  anaconda-2.3.0
  anaconda-2.4.0
  anaconda-4.0.0
  anaconda2-2.4.0
  anaconda2-2.4.1
  anaconda2-2.5.0
  anaconda2-4.0.0
  anaconda2-4.1.0
  anaconda2-4.1.1
  anaconda2-4.2.0
  anaconda2-4.3.0
  anaconda2-4.3.1
  anaconda2-4.4.0
  anaconda2-5.0.0
  anaconda2-5.0.1
  anaconda2-5.1.0
  anaconda2-5.2.0
  anaconda2-5.3.0
  anaconda2-5.3.1
  anaconda2-2018.12
  anaconda2-2019.03
  anaconda2-2019.07
  anaconda3-2.0.0
  anaconda3-2.0.1
  anaconda3-2.1.0
  anaconda3-2.2.0
  anaconda3-2.3.0
  anaconda3-2.4.0
  anaconda3-2.4.1
  anaconda3-2.5.0
  anaconda3-4.0.0
  anaconda3-4.1.0
  anaconda3-4.1.1
  anaconda3-4.2.0
  anaconda3-4.3.0
  anaconda3-4.3.1
  anaconda3-4.4.0
  anaconda3-5.0.0
  anaconda3-5.0.1
  anaconda3-5.1.0
  anaconda3-5.2.0
  anaconda3-5.3.0
  anaconda3-5.3.1
  anaconda3-2018.12
  anaconda3-2019.03
  anaconda3-2019.07
  anaconda3-2019.10
  anaconda3-2020.02
  ironpython-dev
  ironpython-2.7.4
  ironpython-2.7.5
  ironpython-2.7.6.3
  ironpython-2.7.7
  jython-dev
  jython-2.5.0
  jython-2.5-dev
  jython-2.5.1
  jython-2.5.2
  jython-2.5.3
  jython-2.5.4-rc1
  jython-2.7.0
  jython-2.7.1
  micropython-dev
  micropython-1.9.3
  micropython-1.9.4
  micropython-1.10
  micropython-1.11
  micropython-1.12
  miniconda-latest
  miniconda-2.2.2
  miniconda-3.0.0
  miniconda-3.0.4
  miniconda-3.0.5
  miniconda-3.3.0
  miniconda-3.4.2
  miniconda-3.7.0
  miniconda-3.8.3
  miniconda-3.9.1
  miniconda-3.10.1
  miniconda-3.16.0
  miniconda-3.18.3
  miniconda2-latest
  miniconda2-3.18.3
  miniconda2-3.19.0
  miniconda2-4.0.5
  miniconda2-4.1.11
  miniconda2-4.3.14
  miniconda2-4.3.21
  miniconda2-4.3.27
  miniconda2-4.3.30
  miniconda2-4.3.31
  miniconda2-4.4.10
  miniconda2-4.5.1
  miniconda2-4.5.4
  miniconda2-4.5.11
  miniconda2-4.5.12
  miniconda2-4.6.14
  miniconda2-4.7.10
  miniconda2-4.7.12
  miniconda3-latest
  miniconda3-2.2.2
  miniconda3-3.0.0
  miniconda3-3.0.4
  miniconda3-3.0.5
  miniconda3-3.3.0
  miniconda3-3.4.2
  miniconda3-3.7.0
  miniconda3-3.8.3
  miniconda3-3.9.1
  miniconda3-3.10.1
  miniconda3-3.16.0
  miniconda3-3.18.3
  miniconda3-3.19.0
  miniconda3-4.0.5
  miniconda3-4.1.11
  miniconda3-4.2.12
  miniconda3-4.3.11
  miniconda3-4.3.14
  miniconda3-4.3.21
  miniconda3-4.3.27
  miniconda3-4.3.30
  miniconda3-4.3.31
  miniconda3-4.4.10
  miniconda3-4.5.1
  miniconda3-4.5.4
  miniconda3-4.5.11
  miniconda3-4.5.12
  miniconda3-4.6.14
  miniconda3-4.7.10
  miniconda3-4.7.12
  pypy-c-jit-latest
  pypy-c-nojit-latest
  pypy-dev
  pypy-stm-2.3
  pypy-stm-2.5.1
  pypy-1.5-src
  pypy-1.5
  pypy-1.6
  pypy-1.7
  pypy-1.8
  pypy-1.9
  pypy-2.0-src
  pypy-2.0
  pypy-2.0.1-src
  pypy-2.0.1
  pypy-2.0.2-src
  pypy-2.0.2
  pypy-2.1-src
  pypy-2.1
  pypy-2.2-src
  pypy-2.2
  pypy-2.2.1-src
  pypy-2.2.1
  pypy-2.3-src
  pypy-2.3
  pypy-2.3.1-src
  pypy-2.3.1
  pypy-2.4.0-src
  pypy-2.4.0
  pypy-2.5.0-src
  pypy-2.5.0
  pypy-2.5.1-src
  pypy-2.5.1
  pypy-2.6.0-src
  pypy-2.6.0
  pypy-2.6.1-src
  pypy-2.6.1
  pypy-4.0.0-src
  pypy-4.0.0
  pypy-4.0.1-src
  pypy-4.0.1
  pypy-5.0.0-src
  pypy-5.0.0
  pypy-5.0.1-src
  pypy-5.0.1
  pypy-5.1-src
  pypy-5.1
  pypy-5.1.1-src
  pypy-5.1.1
  pypy-5.3-src
  pypy-5.3
  pypy-5.3.1-src
  pypy-5.3.1
  pypy-5.4-src
  pypy-5.4
  pypy-5.4.1-src
  pypy-5.4.1
  pypy-5.6.0-src
  pypy-5.6.0
  pypy-5.7.0-src
  pypy-5.7.0
  pypy-5.7.1-src
  pypy-5.7.1
  pypy2-5.3-src
  pypy2-5.3
  pypy2-5.3.1-src
  pypy2-5.3.1
  pypy2-5.4-src
  pypy2-5.4
  pypy2-5.4.1-src
  pypy2-5.4.1
  pypy2-5.6.0-src
  pypy2-5.6.0
  pypy2-5.7.0-src
  pypy2-5.7.0
  pypy2-5.7.1-src
  pypy2-5.7.1
  pypy2.7-5.8.0-src
  pypy2.7-5.8.0
  pypy2.7-5.9.0-src
  pypy2.7-5.9.0
  pypy2.7-5.10.0-src
  pypy2.7-5.10.0
  pypy2.7-6.0.0-src
  pypy2.7-6.0.0
  pypy2.7-7.0.0-src
  pypy2.7-7.0.0
  pypy2.7-7.1.0-src
  pypy2.7-7.1.0
  pypy2.7-7.1.1-src
  pypy2.7-7.1.1
  pypy2.7-7.2.0-src
  pypy2.7-7.2.0
  pypy2.7-7.3.0-src
  pypy2.7-7.3.0
  pypy2.7-7.3.1-src
  pypy2.7-7.3.1
  pypy3-dev
  pypy3-2.3.1-src
  pypy3-2.3.1
  pypy3-2.4.0-src
  pypy3-2.4.0
  pypy3.3-5.2-alpha1-src
  pypy3.3-5.2-alpha1
  pypy3.3-5.5-alpha-src
  pypy3.3-5.5-alpha
  pypy3.5-c-jit-latest
  pypy3.5-5.7-beta-src
  pypy3.5-5.7-beta
  pypy3.5-5.7.1-beta-src
  pypy3.5-5.7.1-beta
  pypy3.5-5.8.0-src
  pypy3.5-5.8.0
  pypy3.5-5.9.0-src
  pypy3.5-5.9.0
  pypy3.5-5.10.0-src
  pypy3.5-5.10.0
  pypy3.5-5.10.1-src
  pypy3.5-5.10.1
  pypy3.5-6.0.0-src
  pypy3.5-6.0.0
  pypy3.5-7.0.0-src
  pypy3.5-7.0.0
  pypy3.6-7.0.0-src
  pypy3.6-7.0.0
  pypy3.6-7.1.0-src
  pypy3.6-7.1.0
  pypy3.6-7.1.1-src
  pypy3.6-7.1.1
  pypy3.6-7.2.0-src
  pypy3.6-7.2.0
  pypy3.6-7.3.0-src
  pypy3.6-7.3.0
  pypy3.6-7.3.1-src
  pypy3.6-7.3.1
  pyston-0.5.1
  pyston-0.6.0
  pyston-0.6.1
  stackless-dev
  stackless-2.7-dev
  stackless-2.7.2
  stackless-2.7.3
  stackless-2.7.4
  stackless-2.7.5
  stackless-2.7.6
  stackless-2.7.7
  stackless-2.7.8
  stackless-2.7.9
  stackless-2.7.10
  stackless-2.7.11
  stackless-2.7.12
  stackless-2.7.14
  stackless-3.2.2
  stackless-3.2.5
  stackless-3.3.5
  stackless-3.3.7
  stackless-3.4-dev
  stackless-3.4.1
  stackless-3.4.2
  stackless-3.4.7
  stackless-3.5.4
  stackless-3.7.5
#+end_example

** 새로 가상환경을 만들고 anaconda를 설치하자

*** virtualenvs 확인
#+begin_src bash :results verbatim
  pyenv virtualenvs
#+end_src

#+RESULTS:
:   3.8.5/envs/emacs (created from /Users/sroh/.pyenv/versions/3.8.5)
:   3.8.5/envs/opencv (created from /Users/sroh/.pyenv/versions/3.8.5)
:   emacs (created from /Users/sroh/.pyenv/versions/3.8.5)
:   opencv (created from /Users/sroh/.pyenv/versions/3.8.5)
:   uiap (created from /usr/local/Cellar/python@3.8/3.8.5/Frameworks/Python.framework/Versions/3.8)

*** 잠깐 왜 
(created from /usr/local/Cellar/python@3.8/3.8.5/Frameworks/Python.framework/Versions/3.8) 이지?

*** pyvenv.el을 보니 exec-path를 참조한다고 해 있어서 /Users/sroh/.pyenv/shims 을 추가

*** M-x pyvenv-create 선택 후 test-anaconda로 이름을 설정하고 python 선택
#+begin_example
  created virtual environment CPython3.8.5.final.0-64 in 1074ms
  creator CPython3Posix(dest=/Users/sroh/.pyenv/versions/test-anaconda, clear=False, global=False)
  seeder FromAppData(download=False, pip=bundle, setuptools=bundle, wheel=bundle, via=copy, app_data_dir=/Users/sroh/Library/Application Support/virtualenv)
  added seed packages: pip==20.2.2, setuptools==49.6.0, wheel==0.35.1
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator

#+end_example

*** anaconda 설치
#+begin_src bash :results verbatim :exports both
pyenv install anaconda3-5.3.1
#+end_src

#+RESULTS:

#+begin_src bash :results verbatim :exports both
  pyenv versions
#+end_src

#+RESULTS:
: * system (set by /Users/sroh/.pyenv/version)
:   3.8.5
:   3.8.5/envs/emacs
:   3.8.5/envs/opencv
:   anaconda3-5.3.1
:   emacs
:   opencv
:   test-anaconda
:   uiap

*** pyenv 버전 변경
#+begin_src bash :results verbatim :exports both
  pyenv global anaconda3-5.3.1
#+end_src

#+RESULTS:

#+begin_src bash :results verbatim :exports both
  pyenv versions
#+end_src

#+RESULTS:
:   system
:   3.8.5
:   3.8.5/envs/emacs
:   3.8.5/envs/opencv
: * anaconda3-5.3.1 (set by /Users/sroh/.pyenv/version)
:   emacs
:   opencv
:   test-anaconda
:   uiap
#+begin_src bash :results verbatim :exports both
  python -V
  which python
#+end_src

#+RESULTS:
: Python 3.7.0 (default, Jun 28 2018, 07:39:16) 
: [Clang 4.0.1 (tags/RELEASE_401/final)]
: /Users/sroh/.pyenv/shims/python

*** pyvenv-create 테스트
env로 test-anaconda 만들었음
#+begin_src bash :results verbatim :exports both
  pyenv virtualenvs
#+end_src

#+RESULTS:
:   3.8.5/envs/emacs (created from /Users/sroh/.pyenv/versions/3.8.5)
:   3.8.5/envs/opencv (created from /Users/sroh/.pyenv/versions/3.8.5)
: * anaconda3-5.3.1 (created from /Users/sroh/.pyenv/versions/anaconda3-5.3.1)
:   emacs (created from /Users/sroh/.pyenv/versions/3.8.5)
:   opencv (created from /Users/sroh/.pyenv/versions/3.8.5)
:   test-anaconda (created from /usr/local/Cellar/python@3.8/3.8.5/Frameworks/Python.framework/Versions/3.8)
:   uiap (created from /usr/local/Cellar/python@3.8/3.8.5/Frameworks/Python.framework/Versions/3.8)
#+begin_example
  created virtual environment CPython3.8.5.final.0-64 in 914ms
  creator CPython3Posix(dest=/Users/sroh/.pyenv/versions/ta, clear=False, global=False)
  seeder FromAppData(download=False, pip=bundle, setuptools=bundle, wheel=bundle, via=copy, app_data_dir=/Users/sroh/Library/Application Support/virtualenv)
  added seed packages: pip==20.2.2, setuptools==49.6.0, wheel==0.35.1
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator

#+end_example
음 왜이렇지 버전이 꼬이네
약간 bash_profile 손 보고 다시 실행해본다 기록으론 못 남겼다
일단 shims의 python 버전은 제대로 출력된다
*** python 버전 밑 위치 확인
#+begin_src bash :results verbatim :exports both
  python -V
#+end_src

#+RESULTS:
: Python 3.7.0 (default, Jun 28 2018, 07:39:16) 
: [Clang 4.0.1 (tags/RELEASE_401/final)]

#+begin_src bash :results verbatim :exports both
  which python
#+end_src

#+RESULTS:
: /Users/sroh/.pyenv/shims/python

*** virtualenv 설치
#+begin_src bash :results verbatim :exports both
pip install virtualenv
#+end_src

#+RESULTS:
#+begin_example
Collecting virtualenv
  Using cached https://files.pythonhosted.org/packages/12/51/36c685ff2c1b2f7b4b5db29f3153159102ae0e0adaff3a26fd1448232e06/virtualenv-20.0.31-py2.py3-none-any.whl
Collecting importlib-metadata<2,>=0.12; python_version < "3.8" (from virtualenv)
  Downloading https://files.pythonhosted.org/packages/8e/58/cdea07eb51fc2b906db0968a94700866fc46249bdc75cac23f9d13168929/importlib_metadata-1.7.0-py2.py3-none-any.whl
Collecting distlib<1,>=0.3.1 (from virtualenv)
  Using cached https://files.pythonhosted.org/packages/f5/0a/490fa011d699bb5a5f3a0cf57de82237f52a6db9d40f33c53b2736c9a1f9/distlib-0.3.1-py2.py3-none-any.whl
Requirement already satisfied: appdirs<2,>=1.4.3 in /Users/sroh/.pyenv/versions/anaconda3-5.3.1/lib/python3.7/site-packages (from virtualenv) (1.4.3)
Requirement already satisfied: six<2,>=1.9.0 in /Users/sroh/.pyenv/versions/anaconda3-5.3.1/lib/python3.7/site-packages (from virtualenv) (1.11.0)
Requirement already satisfied: filelock<4,>=3.0.0 in /Users/sroh/.pyenv/versions/anaconda3-5.3.1/lib/python3.7/site-packages (from virtualenv) (3.0.8)
Collecting zipp>=0.5 (from importlib-metadata<2,>=0.12; python_version < "3.8"->virtualenv)
  Downloading https://files.pythonhosted.org/packages/b2/34/bfcb43cc0ba81f527bc4f40ef41ba2ff4080e047acb0586b56b3d017ace4/zipp-3.1.0-py3-none-any.whl
Installing collected packages: zipp, importlib-metadata, distlib, virtualenv
Successfully installed distlib-0.3.1 importlib-metadata-1.7.0 virtualenv-20.0.31 zipp-3.1.0
#+end_example

*** virtualenv 버전 확인
#+begin_src bash :results verbatim :exports both
virtualenv --version
#+end_src

#+RESULTS:
: virtualenv 20.0.31 from /Users/sroh/.pyenv/versions/anaconda3-5.3.1/lib/python3.7/site-packages/virtualenv/__init__.py
ok!

*** pyvenv-create 테스트
pyvenv-create 바로 사용하니 3.8.5버전으로 설치된다
*** pyvenv-workon 으로 아나콘다 버전 설정하고 create 실행하니 경로가 선택한 아나콘다 버전을 가리킨다.
설치도 제대로 된거 같다.
#+begin_example
  created virtual environment CPython3.7.0.final.0-64 in 949ms
  creator CPython3Posix(dest=/Users/sroh/.pyenv/versions/ta3, clear=False, global=False)
  seeder FromAppData(download=False, pip=bundle, setuptools=bundle, wheel=bundle, via=copy, app_data_dir=/Users/sroh/Library/Application Support/virtualenv)
  added seed packages: pip==20.2.2, setuptools==49.6.0, wheel==0.35.1
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
#+end_example
*** pyenv virtualenvs 확인해보자
#+begin_src bash :results verbatim :exports both
  pyenv virtualenvs
#+end_src

#+RESULTS:
:   3.8.5/envs/emacs (created from /Users/sroh/.pyenv/versions/3.8.5)
:   3.8.5/envs/opencv (created from /Users/sroh/.pyenv/versions/3.8.5)
: * anaconda3-5.3.1 (created from /Users/sroh/.pyenv/versions/anaconda3-5.3.1)
:   anaconda3-5.3.1/envs/aaa (created from /Users/sroh/.pyenv/versions/anaconda3-5.3.1)
:   emacs (created from /Users/sroh/.pyenv/versions/3.8.5)
:   opencv (created from /Users/sroh/.pyenv/versions/3.8.5)
:   ta2 (created from /usr/local/Cellar/python@3.8/3.8.5/Frameworks/Python.framework/Versions/3.8)
:   ta3 (created from /Users/sroh/.pyenv/versions/anaconda3-5.3.1)
제대로 설치된것 같다.

*** workon으로 변경해보자
제대로 작동된다.

*** virtualenv를 anaconda버전으로 설정해도 create를 할때 shims/python으로 하면 3.8.5 버전으로 설치된다!

*** 또다른 문제
virtualenv 폴더가 아나콘다 밑에 생성이 안되네;;

**** WORKON_HOME setenv
#+begin_src emacs-lisp
  (setenv "WORKON_HOME" "/Users/sroh/.pyenv/versions/anaconda3-5.3.1/envs/")
#+end_src

*** 결론 WORKFLOW

**** pyenv 로 python 버전 설치 (python2... python3... anaconda3... 등등)
pyenv install anaconda3-5.3.1

**** WORKON_HOME 재설정

**** pyvenv-create 설정 
python 디렉토리는 anaconda 밑으로 수동으로 설정.(지금은 anaconda설치니깐..)

***** TODO global로 anaconda버전이 잡혀있는데 왜 emacs에서는 3.8.5 로 되는 걸까
여튼 아래 방법으로 수동으로 python위치 잡아주면 되기는 한다.

**** test
pyvenv-workon test-anaconda

#+begin_src bash :results verbatim :exports both
pip install numpy
#+end_src

#+RESULTS:
: Collecting numpy
:   Downloading numpy-1.19.1-cp37-cp37m-macosx_10_9_x86_64.whl (15.3 MB)
: Installing collected packages: numpy
: Successfully installed numpy-1.19.1

*** python-language-server 설치
#+begin_src bash :results verbatim :exports both
which pyls
#+end_src

#+RESULTS:
: /Users/sroh/.pyenv/shims/pyls
global 하라는 메세지가 나온다.

pyvenv-workon을 uiap로 설정하고 pyls설치
#+begin_src bash :results verbatim :exports both
  pip install 'python-language-server[all]'
#+end_src

#+RESULTS:
#+begin_example
Collecting python-language-server[all]
  Using cached python_language_server-0.34.1-py3-none-any.whl (49 kB)
Collecting jedi<0.18.0,>=0.17.0
  Using cached jedi-0.17.2-py2.py3-none-any.whl (1.4 MB)
Collecting ujson<=1.35; platform_system != "Windows"
  Using cached ujson-1.35.tar.gz (192 kB)
Collecting python-jsonrpc-server>=0.3.2
  Using cached python_jsonrpc_server-0.3.4-py3-none-any.whl (9.0 kB)
Collecting pluggy
  Using cached pluggy-0.13.1-py2.py3-none-any.whl (18 kB)
Collecting pydocstyle>=2.0.0; extra == "all"
  Using cached pydocstyle-5.1.1-py3-none-any.whl (35 kB)
Collecting yapf; extra == "all"
  Using cached yapf-0.30.0-py2.py3-none-any.whl (190 kB)
Collecting rope>=0.10.5; extra == "all"
  Using cached rope-0.17.0.tar.gz (248 kB)
Collecting autopep8; extra == "all"
  Using cached autopep8-1.5.4.tar.gz (121 kB)
Collecting pyflakes<2.3.0,>=2.2.0; extra == "all"
  Using cached pyflakes-2.2.0-py2.py3-none-any.whl (66 kB)
Collecting mccabe<0.7.0,>=0.6.0; extra == "all"
  Using cached mccabe-0.6.1-py2.py3-none-any.whl (8.6 kB)
Collecting pylint; extra == "all"
  Using cached pylint-2.6.0-py3-none-any.whl (325 kB)
Collecting pycodestyle<2.7.0,>=2.6.0; extra == "all"
  Using cached pycodestyle-2.6.0-py2.py3-none-any.whl (41 kB)
Collecting flake8>=3.8.0; extra == "all"
  Using cached flake8-3.8.3-py2.py3-none-any.whl (72 kB)
Collecting parso<0.8.0,>=0.7.0
  Using cached parso-0.7.1-py2.py3-none-any.whl (109 kB)
Collecting importlib-metadata>=0.12; python_version < "3.8"
  Using cached importlib_metadata-1.7.0-py2.py3-none-any.whl (31 kB)
Collecting snowballstemmer
  Using cached snowballstemmer-2.0.0-py2.py3-none-any.whl (97 kB)
Collecting toml
  Using cached toml-0.10.1-py2.py3-none-any.whl (19 kB)
Collecting isort<6,>=4.2.5
  Downloading isort-5.5.1-py3-none-any.whl (95 kB)
Collecting astroid<=2.5,>=2.4.0
  Using cached astroid-2.4.2-py3-none-any.whl (213 kB)
Collecting zipp>=0.5
  Using cached zipp-3.1.0-py3-none-any.whl (4.9 kB)
Collecting typed-ast<1.5,>=1.4.0; implementation_name == "cpython" and python_version < "3.8"
  Downloading typed_ast-1.4.1-cp37-cp37m-macosx_10_9_x86_64.whl (223 kB)
Collecting lazy-object-proxy==1.4.*
  Downloading lazy_object_proxy-1.4.3-cp37-cp37m-macosx_10_13_x86_64.whl (19 kB)
Collecting six~=1.12
  Using cached six-1.15.0-py2.py3-none-any.whl (10 kB)
Collecting wrapt~=1.11
  Using cached wrapt-1.12.1.tar.gz (27 kB)
Building wheels for collected packages: ujson, rope, autopep8, wrapt
  Building wheel for ujson (setup.py): started
  Building wheel for ujson (setup.py): finished with status 'done'
  Created wheel for ujson: filename=ujson-1.35-cp37-cp37m-macosx_10_7_x86_64.whl size=22276 sha256=54740bea9f10fccdc8d43ebaa837766f2583ba7d2ee3072810af447c5aac1d52
  Stored in directory: /Users/sroh/Library/Caches/pip/wheels/55/e8/7e/e36b183f3e654b73fc04eb1b656ad3c2773077dd531cb35c4d
  Building wheel for rope (setup.py): started
  Building wheel for rope (setup.py): finished with status 'done'
  Created wheel for rope: filename=rope-0.17.0-py3-none-any.whl size=180514 sha256=7fd9df819eecd34815f6a250a3d884e58fc4ef7e57baf1be9248ecbdf4ea3945
  Stored in directory: /Users/sroh/Library/Caches/pip/wheels/fc/68/52/627ca0d67f266c203ff5ef7e441036cf2049cdbb3e030c9e0a
  Building wheel for autopep8 (setup.py): started
  Building wheel for autopep8 (setup.py): finished with status 'done'
  Created wheel for autopep8: filename=autopep8-1.5.4-py2.py3-none-any.whl size=45287 sha256=f9f870975384bde1e9da0854f55fe54d912f1961d3db549653c613e831e943ca
  Stored in directory: /Users/sroh/Library/Caches/pip/wheels/2c/ad/e2/f5322a230aedd0091b75ec899404e3562d8bb4e7ba0f025cbd
  Building wheel for wrapt (setup.py): started
  Building wheel for wrapt (setup.py): finished with status 'done'
  Created wheel for wrapt: filename=wrapt-1.12.1-cp37-cp37m-macosx_10_7_x86_64.whl size=33328 sha256=e711ead91bd18695f264bae77724fafc65ebaefa74ca8cfb59f772994dca7137
  Stored in directory: /Users/sroh/Library/Caches/pip/wheels/62/76/4c/aa25851149f3f6d9785f6c869387ad82b3fd37582fa8147ac6
Successfully built ujson rope autopep8 wrapt
Installing collected packages: parso, jedi, ujson, python-jsonrpc-server, zipp, importlib-metadata, pluggy, snowballstemmer, pydocstyle, yapf, rope, pycodestyle, toml, autopep8, pyflakes, mccabe, isort, typed-ast, lazy-object-proxy, six, wrapt, astroid, pylint, flake8, python-language-server
Successfully installed astroid-2.4.2 autopep8-1.5.4 flake8-3.8.3 importlib-metadata-1.7.0 isort-5.5.1 jedi-0.17.2 lazy-object-proxy-1.4.3 mccabe-0.6.1 parso-0.7.1 pluggy-0.13.1 pycodestyle-2.6.0 pydocstyle-5.1.1 pyflakes-2.2.0 pylint-2.6.0 python-jsonrpc-server-0.3.4 python-language-server-0.34.1 rope-0.17.0 six-1.15.0 snowballstemmer-2.0.0 toml-0.10.1 typed-ast-1.4.1 ujson-1.35 wrapt-1.12.1 yapf-0.30.0 zipp-3.1.0
#+end_example

#+begin_src bash :results verbatim :exports both
  which pyls
#+end_src

#+RESULTS:
: /Users/sroh/.pyenv/versions/anaconda3-5.3.1/envs/uiap/bin/pyls

import numpy를 하니 jupyter_client 가 없다고 나온다
#+begin_example
Traceback (most recent call last):
  File "/Users/sroh/.emacs.d/elpa/ob-ipython-20180224.953/client.py", line 1, in <module>
    import jupyter_client as client
ModuleNotFoundError: No module named 'jupyter_client'
#+end_example

#+begin_src bash :results verbatim 
  pip install jupyter_client
#+end_src

#+RESULTS:
#+begin_example
Collecting jupyter_client
  Using cached jupyter_client-6.1.7-py3-none-any.whl (108 kB)
Collecting python-dateutil>=2.1
  Using cached python_dateutil-2.8.1-py2.py3-none-any.whl (227 kB)
Collecting jupyter-core>=4.6.0
  Using cached jupyter_core-4.6.3-py2.py3-none-any.whl (83 kB)
Collecting tornado>=4.1
  Using cached tornado-6.0.4.tar.gz (496 kB)
Collecting traitlets
  Downloading traitlets-5.0.4-py3-none-any.whl (98 kB)
Collecting pyzmq>=13
  Downloading pyzmq-19.0.2-cp37-cp37m-macosx_10_9_x86_64.whl (801 kB)
Requirement already satisfied: six>=1.5 in /Users/sroh/.pyenv/versions/anaconda3-5.3.1/envs/uiap/lib/python3.7/site-packages (from python-dateutil>=2.1->jupyter_client) (1.15.0)
Collecting ipython-genutils
  Using cached ipython_genutils-0.2.0-py2.py3-none-any.whl (26 kB)
Building wheels for collected packages: tornado
  Building wheel for tornado (setup.py): started
  Building wheel for tornado (setup.py): finished with status 'done'
  Created wheel for tornado: filename=tornado-6.0.4-cp37-cp37m-macosx_10_7_x86_64.whl size=417170 sha256=e3b56ea9052411f386e1f653e9204e2c4fe3235e48db7fb0cf5786f8680c80e4
  Stored in directory: /Users/sroh/Library/Caches/pip/wheels/7d/14/fa/d88fb5da77d813ea0ffca38a2ab2a052874e9e1142bad0b348
Successfully built tornado
Installing collected packages: python-dateutil, ipython-genutils, traitlets, jupyter-core, tornado, pyzmq, jupyter-client
Successfully installed ipython-genutils-0.2.0 jupyter-client-6.1.7 jupyter-core-4.6.3 python-dateutil-2.8.1 pyzmq-19.0.2 tornado-6.0.4 traitlets-5.0.4
#+end_example

* LSP mode in org-babel
:PROPERTIES:
:header-args: :eval never-export
:header-args:bash: :results verbatim :exports both 
:header-args:elisp: :exports both
:header-args:ipython: :exports both 
:END:

** org file안에서 begin_src ipython .... :tangle "filename.py" 를 해준다

** filename.py를 열고 lsp server를 작동시킨다. 

** 다시 org file 을 열고 lsp-org 실행시킨다.
org babel 에서 잘 작동된다!!! YES!
+ 이 순서가 맞는지는 확실치 않다
+ Org Src(C-c ') 버퍼안에서는 안된다. 

** 2020-09-07 18:58:13,245 UTC - WARNING - pyls_jsonrpc.endpoint - Received cancel notification for unknown message id 2
에러가 발생하는데 버전 미스매치라고 한다. T.T
pip upgrade를 해보자;;
#+begin_src bash
  python -m pip install --upgrade pip
#+end_src

#+RESULTS:
: Requirement already up-to-date: pip in /Users/sroh/.pyenv/versions/anaconda3-5.3.1/envs/uiap/lib/python3.7/site-packages (20.2.2)
T.T 죽갔군..

* lsp 에서 lsp-python-ms 로 갈아탔다

** lsp 에선 code completion 이 조금 부족한 부분이 있어서 ms로 갈아탔다.
변수가 어떤 객체인지 인식을 못하는건지 인식 후 코드 컴플리션이 안되는건 지 모르겠다.
ms는변수에 맞게 methods 등이 제대로 컴플리션 되었다.

*** TODO 제대로 작동하다 안되다하는게 문제.. 몇번 재접속하다보면 제대로 작동한다. 왜 그럴까 --;

* TODO 소스블락이 여러개일때 lsp-org 가 제대로 작동하게 하는 방법?

* 출력 results 에 대해 좀 알아보자 출력이 헷갈린다. print(... 그냥 print없이 변수 출력
